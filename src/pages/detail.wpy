<template lang="wxml">
  <swiper indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}">
    <block 
      wx:for="{{ detail._source.image_urls }}"
      wx:key="{{ item }}">
      <swiper-item>
        <image src="{{item}}" mode="aspectFill" />
      </swiper-item>
    </block>
  </swiper>
  <view class="header-wrapper">
    <wux-card bordered title="{{ detail._source.title}}" extra="价格:{{ detail._source.price }}">
      <view slot="body">
        <van-row gutter="4">
          <van-col 
            wx:for="{{ detail._source.tags }}"
            wx:key="{{ item }}"
            item="item"
            span="6" 
            class="tag">
            <van-tag plain color="#f2826a" type="danger">{{ item }}</van-tag>
          </van-col>
        </van-row>
        <wux-white-space size="large" />
        <van-row>
          <van-col span="12">
            朝向：{{ detail._source.orientation }}
          </van-col>
          <van-col span="12">
            地点：{{ detail._source.address }}
          </van-col>
          <van-col span="12">
            面积：{{ detail._source.area }}平
          </van-col>
          <van-col span="12">
            房型：{{ detail._source.house_type }}
          </van-col>
        </van-row>
      </view>
    </wux-card>

    <wux-white-space />
    <wux-card bordered title="室友情况">
      <view slot="body">
        <view 
          wx:for="{{ detail._source.chums }}"
          wx:key="{{ item }}"
          item="item">
            <van-row>
              <van-col span="12">
                房间：{{ item.bedroom }}
              </van-col>
              <van-col span="12">
                房屋状态：{{ item.state }}
              </van-col>
              <view wx:if="{{ item.state === '已入住' }}">
                <van-col span="12">
                  租期：{{ item.check_in_time }}
                </van-col>
                <van-col span="12">
                  性别：{{ item.gender === 'woman' ? '女生' : '男生'}}
                </van-col>
                <van-col span="12">
                  职业：{{ item.job }}
                </van-col>
                <van-col span="12">
                  星座：{{ item.sign }}
                </van-col>
              </view>
            </van-row>
        </view>
      </view>
    </wux-card>

    <wux-white-space />
    <wux-card bordered title="位置及周边">
      <view class="map_container">
        <map class="map" id="map" longitude="{{longitude}}" latitude="{{latitude}}" scale="14" show-location="true" markers="{{markers}}" bindmarkertap="makertap"></map>
      </view>
      <view class="map_text">
        <text class="h1">{{textData.name}}</text>
        <text>{{textData.desc}}</text>
      </view>
    </wux-card>
    <wux-white-space />
    <wux-card bordered title="为您推荐" >
      <view slot="body" class="scroll-view-wrapper">
        <view>
        <scroll-view scroll-x style="white-space: nowrap;width: 100%;">
          <view 
            wx:for="{{ detail._source.recommend }}"
            wx:key="{{ item }}"
            item="item"
            style="display: inline-block">
            <image src="{{ item.photo }}" mode="aspectFill" />
            <wux-wing-blank body-style="margin-left: 20px; margin-right: 20px">
              <wux-divider show-text="{{ false }}" />
            </wux-wing-blank>
            <text>{{ item.info }}</text>
          </view>
        </scroll-view>
        </view>
      </view>
    </wux-card>
  </view>
  <van-goods-action>
    <van-goods-action-icon
      icon="like-o"
      text="收藏"
      bind:click="onClickIcon"
    />
    <van-goods-action-button
      text="价格分析"
      type="warning"
      bind:click="onClickButton"
    />
    <van-goods-action-button
      text="立刻看房"
      bind:click="onClickButton"
    />
  </van-goods-action>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api';
let amap = require('@/lib/amap-wx.js');
let markersData = []
export default class Detail extends wepy.page {
  config = {
    usingComponents: {
      'wux-card': '../components/wux/card/index',
      'wux-divider': '../components/wux/divider/index',
      'wux-white-space': '../components/wux/white-space/index',
      'wux-wing-blank': '../components/wux/wing-blank/index',
      'van-tag': '../components/van/tag/index',
      'van-row': '../components/van/row/index',
      'van-col': '../components/van/col/index',
      'van-goods-action-button': '../components/van/goods-action-button/index',
      'van-goods-action-icon': '../components/van/goods-action-icon/index',
      'van-goods-action': '../components/van/goods-action/index'
    }
  };
  data = {
    markers: [],
    latitude: '',
    longitude: '',
    detail: undefined,
    indicatorDots: true,
    autoplay: true,
    interval: 5000,
    duration: 1000
  };
  methods = {
    makertap(e) {
      console.log(e);
      
      let id = e.markerId;
      this.showMarkerInfo(markersData, id);
      this.changeMarkerColor(markersData, id);
    },
    showMarkerInfo(data, i) {
      this.textData = {
        name: data[i].name,
        desc: data[i].address
      };
    },
    changeMarkerColor(data, i) {
      for (var j = 0; j < data.length; j++) {
        if (j == i) {
          data[j].iconPath = '../images/marker_checked.png';
        } else {
          data[j].iconPath = './images/marker.png';
        }
        this.markers.push({
          id: data[j].id,
          latitude: data[j].latitude,
          longitude: data[j].longitude,
          iconPath: data[j].iconPath,
          width: data[j].width,
          height: data[j].height
        });
      }
    }
  };
  events = {};

  onLoad(options) {
    console.log(amap);
    let amapFun = new amap.AMapWX({ key: 'ba05f2fb6ab24db43cf7a803d73f2263' });
    let params = {
      iconPathSelected: '../images/marker_checked.png',
      iconPath: '../images/marker.png',
      success(data) {
        markersData = data.markers;
        let poisData = data.poisData;
        let markers_new = [];
        markersData.forEach(function(item, index) {
          markers_new.push({
            id: item.id,
            latitude: item.latitude,
            longitude: item.longitude,
            iconPath: item.iconPath,
            width: item.width,
            height: item.height
          });
        });
        this.markers = markers_new;
        this.city = poisData[0].cityname || '';
        this.latitude = markersData[0].latitude;
        this.longitude = markersData[0].longitude;
        
      },
      fail(info) {
        console.log(info);
      }
    };
    amapFun.getPoiAround(params);
    api
      .query({
        query: {
          params: { id: options.houseId }
        },
        method: 'POST'
      })
      .then(res => {
        this.detail = res.data.hits.hits[0];
        console.log(this.detail);
        this.$apply();
      });
  }
  // Other properties
}
</script>


<style lang="less">
/** less **/
::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}
.map_container {
  position: absolute;
  top: 42px;
  bottom: 80px;
  left: 0;
  right: 0;
}
.map {
  width: 100%;
  height: 100%;
}
.map_text {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0px;
  height: 80px;
  background: #fff;
  padding: 0 15px;
}
.header-wrapper {
  padding: 10rpx;
}
.scroll-view-wrapper {
  margin-bottom: 72rpx;
}
scroll-view {
  height: 540rpx;
}
scroll-view image {
  height: 360rpx;
}
</style>
