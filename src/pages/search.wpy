<template lang="wxml">
  <van-search 
    placeholder="请输入搜索关键词"
    use-action-slot
    bind:search="onSearch"
    >
    <view slot="action" @tap="onChangeAddress"><van-icon name="map-marked" size="12px" />南京</view>
  </van-search>
  <view>
    <wux-grids bordered="{{ false }}">
      <wux-grid thumb="https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3057634752,3765738747&fm=27&gp=0.jpg" label="自如" />
      <wux-grid thumb="http://file.baixing.net/201709/4916aa54f4b4c69b4c01591fe6a87046.png" label="百姓" />
      <wux-grid thumb="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/crop%3D0%2C340%2C2005%2C1324%3Bc0%3Dbaike272%2C5%2C5%2C272%2C90/sign=a66ebdee583d26973a9c521d68cb9ec8/9e3df8dcd100baa1cb93c79f4e10b912c8fc2e52.jpg" label="链家" />
    </wux-grids>
  </view>
  <view class="sticky">
    <wux-sticky scrollTop="{{ scrollTop }}">
    <wux-sticky-item>
      <view slot="title">
          <view>
            <wux-filterbar
              bind:change="onChangeFilter"
              items="{{ items }}" />
          </view>
      </view>
      <view slot="content">
        <van-card 
          wx:for="{{ hits }}" 
          wx:key="_id" 
          index="_id" 
          item="item"
          thumb-link="{{ detail }}" 
          price="{{ item._source.price }}" 
          desc="{{ item._source.address }}" 
          title="{{ item._source.title }}" 
          tag="{{ item._source.air_part.air_quality.show_info.is_new_des }}" 
          thumb="{{ item._source.image_urls[0] }}">
          <view slot="tags">
            <van-tag 
              wx:for="{{ item._source.tags }}"
              wx:key="url"
              item="item"
              plain 
              type="danger" 
              custom-class="tag">{{ item }}</van-tag>
          </view>
        </van-card>
      </view>
    </wux-sticky-item>
  </wux-sticky>
  </view>
</template>

<script>
import wepy from 'wepy'
import api from '@/api/api'
export default class Search extends wepy.page {
  config = {
    usingComponents: {
      'wux-filterbar': '../components/wux/filterbar/index',
      'wux-grids': '../components/wux/grids/index',
      'wux-grid': '../components/wux/grid/index',
      'wux-sticky': '../components/wux/sticky/index',
      'wux-sticky-item': '../components/wux/sticky-item/index',
      'van-search': '../components/van/search/index',
      'van-card': '../components/van/card/index',
      'van-icon': '../components/van/icon/index',
      'van-tag': '../components/van/tag/index'
    }
  };
  data = {
    params: {},
    active: 0,
    imageURL:
      'https://image1.ljcdn.com/materials/list/2016-11-23/phpe022WE.png',
    scrollTop: 0,
    items: [
      {
        type: 'radio',
        label: '合租/整租',
        value: 'rent_type',
        children: [
          {
            label: '合租',
            value: '合'
          },
          {
            label: '整租',
            value: '整'
          }
        ],
        groups: ['001']
      },
      {
        type: 'radio',
        label: '租金',
        value: 'price',
        children: [
          {
            label: '不限',
            value: '-1'
          },
          {
            label: '1000元以下',
            value: '1000'
          },
          {
            label: '1000-2000元',
            value: '2000'
          }
        ],
        groups: ['002']
      },
      {
        type: 'radio',
        label: '区域',
        value: 'address',
        children: [
          {
            label: '栖霞',
            value: '栖霞'
          },
          {
            label: '江宁',
            value: 'jiangning'
          }
        ],
        groups: ['003']
      },
      {
        type: 'filter',
        label: '筛选',
        value: 'filter',
        children: [
          {
            type: 'checkbox',
            label: '装修类型',
            value: 'decorate',
            children: [
              {
                label: '精装修',
                value: '精装修'
              },
              {
                label: '豪华装修',
                value: '豪华装修'
              }
            ]
          },
          {
            type: 'checkbox',
            label: '户型',
            value: 'house_type',
            children: [
              {
                label: '3室1厅1卫',
                value: '3室1厅1卫'
              },
              {
                label: '2室1厅1卫',
                value: '2室1厅1卫'
              },
              {
                label: '1室1厅1卫',
                value: '1室1厅1卫'
              }
            ]
          }
        ],
        groups: ['001', '002', '003']
      }
    ],
    hits: []
  };
  methods = {
    onChangeAddress() {
      wepy.navigateTo({
        url: '/pages/address'
      })
    },
    onChangeFilter(event) {
      const { checkedItems } = event.detail
      this.params = {}
      checkedItems.forEach(n => {
        if (n.checked) {
          if (n.value === 'rent_type') {
            const selected = n.children
              .filter(n => n.checked)
              .map(n => n.value)
              .join(' ')
            this.params.rent_type = selected
          } else if (n.value === 'price') {
            const selected = n.children
              .filter(n => n.checked)
              .map(n => n.value)
              .join(' ')
            this.params.price = selected
          } else if (n.value === 'address') {
            const selected = n.children
              .filter(n => n.checked)
              .map(n => n.value)
              .join(' ')
            this.params.address = selected
          } else if (n.value === 'filter') {
            n.children.filter(n => n.selected).forEach(n => {
              if (n.value === 'decorate') {
                const selected = n.children
                  .filter(n => n.checked)
                  .map(n => n.value)
                  .join(' ')
                this.params.decorate = selected
              } else if (n.value === 'house_type') {
                const selected = n.children
                  .filter(n => n.checked)
                  .map(n => n.value)
                  .join(' ')
                this.params.house_type = selected
              }
            })
          }
        }
      })
      console.log(this.params)
    },
    onSearch(event) {
      this.params.keyword = event.detail
      api
        .query({
          query: {
            params: this.params
          },
          method: 'POST'
        })
        .then(res => {
          this.hits = res.data.hits
          this.hits.forEach(hit => {
            if (hit._source.image_urls === undefined) {
              hit._source.image_urls = []
              hit._source.image_urls.push(
                'http://www.51gaifang.com/tu/UploadSoftPic/201902/2019022515282279.jpg'
              )
            }
          })
          console.log(this.hits)
          this.$apply()
        })
    }
  }
  onPageScroll(e) {
    this.setData({
      scrollTop: e.scrollTop
    })
  }
  events = {}
  onLoad() {}
}
</script>

<style lang="less">
/** less **/
.image {
  width: auto !important;
  height: 70% !important;
  padding-bottom: 70% !important;
}
</style>
